#cmake_minimum_required(VERSION 2.4.6)
cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)
project(ground_based_rgbd_people_detector)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)


#find_package(PCL 1.7 REQUIRED)
#include_directories(BEFORE ${PCL_INCLUDE_DIRS})
#link_directories(${PCL_LIBRARY_DIRS})
#add_definitions(${PCL_DEFINITIONS})
#if (NOT PCL_FOUND)
#    MESSAGE(FATAL_ERROR "PCL not found.\n")
#endif (NOT PCL_FOUND)

#rosbuild_add_executable(ground_based_rgbd_people_detector src/main_ground_based_people_detection.cpp)
#SET_TARGET_PROPERTIES(ground_based_rgbd_people_detector PROPERTIES LINK_FLAGS -L${PCL_LIBRARY_DIRS})

rosbuild_init()

#set the default path for built executables to the "bin" directory
#set the default path for built libraries to the "lib" directory

#uncomment if you have defined messages
rosbuild_genmsg()
#uncomment if you have defined services
#rosbuild_gensrv()

#common commands for building c++ executables and libraries
#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)
#target_link_libraries(${PROJECT_NAME} another_library)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
#rosbuild_add_executable(example examples/example.cpp)
#target_link_libraries(example ${PROJECT_NAME})

#link_directories(${PCL_LIBRARY_DIRS})

# rosbuild_add_executable (ground_based_rgbd_people_detector src/main_ground_based_people_detection.cpp)
rosbuild_genmsg()
#target_link_libraries (ground_based_rgbd_people_detector ${PCL_LIBRARIES} roscpp rostime rosconsole roscpp_serialization)

#alles über rosbuild_init() was auskommentiert ist einkommentiert!
#alles unter #target_link_libraries(example ${PROJECT_NAME}) und über target_link_libraries (ground_based_rgbd_people_detector ${PCL_LIBRARIES} roscpp rostime rosconsole roscpp_serialization)
#auskommentiert
